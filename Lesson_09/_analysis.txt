Анализ проекта на использование антипаттернов.

Антипаттерны в коде.

1) Магические числа (Magic Number) — не обнаружено.
2) Спагетти-код (Spaghetti Code) — не обнаружено.
3) Лазанья-код (Lasagna Code) — не обнаружено.
4) Слепая вера (Blind faith) — обнаружен. Необходимо сделать проверки для вводимых данных.
5) Шифрокод (Cryptic Code) — не обнаружено.
6) Жёсткое кодирование (Hard Code) — не обнаружено.
7) Мягкое кодирование (Soft Code) — не обнаружено.
8) Поток лавы (Lava flow) — не обнаружено. До продакшена не дойдет).

Специфические для Python антипаттерны в коде.

1) Возврат из функции переменных разных типов. Не обнаружено.
2) Создание словарей более сложным способом. Не обнаружено.
3) Запрос разрешения вместо «прощения» (концепция EAFP). Не обнаружено.
4) Отдельное присвоение значений переменным вместо распаковки. Не обнаружено.
5) Использование map / filter там, где можно обойтись без них. Не обнаружено.

Антипаттерны ООП.

1) Боязнь размещать логику в объектах предметной области (Anemic Domain Model). Не обнаружено.
2) Божественный объект (God object). Обнаружено. Объект AppClass из модуля wsgi.py. Решение — распределить ответственность между различными классами программы.
3) Полтергейст (Poltergeist). Не обнаружено.
4) Сплошное одиночество (Singletonitis). Не обнаружено.
5) Приватизация (Privatization). Не обнаружено.